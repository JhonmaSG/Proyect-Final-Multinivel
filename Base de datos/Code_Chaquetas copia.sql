-- MySQL Script generated by MySQL Workbench
-- Thu May 18 12:44:47 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema diagrama_bd_chaquetas
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema diagrama_bd_chaquetas
-- -----------------------------------------------------
CREATE DATABASE confeccion;
USE confeccion;

CREATE SCHEMA IF NOT EXISTS `diagrama_bd_chaquetas` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE 'diagrama_bd_chaquetas' ;

-- -----------------------------------------------------
-- Table `diagrama_bd_chaquetas`.`Materia_Prima`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `diagrama_bd_chaquetas`.`Materia_Prima` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `diagrama_bd_chaquetas`.`Materia_Prima` (
  `Cod_Mp` DOUBLE NOT NULL DEFAULT 123456,
  `Descrip_Mp` VARCHAR(45) NOT NULL DEFAULT 'algodon',
  `Cant_Exist_Mp` INT NOT NULL DEFAULT 100,
  PRIMARY KEY (`Cod_Mp`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `diagrama_bd_chaquetas`.`Proveedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `diagrama_bd_chaquetas`.`Proveedor` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `diagrama_bd_chaquetas`.`Proveedor` (
  `Nit_Pro` DOUBLE NOT NULL,
  `Razon_Social_Pro` VARCHAR(45) NOT NULL,
  `Direccion_Pro` VARCHAR(45) NOT NULL,
  `Tel_Pro` DOUBLE NOT NULL,
  `Email_Pro` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Nit_Pro`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `diagrama_bd_chaquetas`.`Factura_Compra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `diagrama_bd_chaquetas`.`Factura_Compra` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `diagrama_bd_chaquetas`.`Factura_Compra` (
  `No_Fc` INT NOT NULL,
  `Fecha_Hora_Fc` DATETIME NOT NULL,
  `Forma_Pago_Fc` VARCHAR(45) NOT NULL,
  `Total_Pagar_Fc` DOUBLE NOT NULL,
  `Proveedor_Nit_Pro` DOUBLE NOT NULL,
  PRIMARY KEY (`No_Fc`, `Proveedor_Nit_Pro`),
  CONSTRAINT `fk_Factura_Compra_Proveedor1`
    FOREIGN KEY (`Proveedor_Nit_Pro`)
    REFERENCES `diagrama_bd_chaquetas`.`Proveedor` (`Nit_Pro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Factura_Compra_Proveedor1_idx` ON `diagrama_bd_chaquetas`.`Factura_Compra` (`Proveedor_Nit_Pro` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `diagrama_bd_chaquetas`.`Detalle_Compra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `diagrama_bd_chaquetas`.`Detalle_Compra` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `diagrama_bd_chaquetas`.`Detalle_Compra` (
  `Total_Parcial_Dc` DOUBLE NOT NULL,
  `Cantidad_Dc` INT NOT NULL,
  `Materia_Prima_Cod_Mp` DOUBLE NOT NULL,
  `Factura_Compra_No_Fc` INT NOT NULL,
  PRIMARY KEY (`Materia_Prima_Cod_Mp`, `Factura_Compra_No_Fc`),
  CONSTRAINT `fk_Detalle_Compra_Materia_Prima`
    FOREIGN KEY (`Materia_Prima_Cod_Mp`)
    REFERENCES `diagrama_bd_chaquetas`.`Materia_Prima` (`Cod_Mp`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Detalle_Compra_Factura_Compra1`
    FOREIGN KEY (`Factura_Compra_No_Fc`)
    REFERENCES `diagrama_bd_chaquetas`.`Factura_Compra` (`No_Fc`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Detalle_Compra_Factura_Compra1_idx` ON `diagrama_bd_chaquetas`.`Detalle_Compra` (`Factura_Compra_No_Fc` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `diagrama_bd_chaquetas`.`Cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `diagrama_bd_chaquetas`.`Cliente` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `diagrama_bd_chaquetas`.`Cliente` (
  `Nit_Cli` DOUBLE NOT NULL,
  `Razon_Social_Cli` VARCHAR(45) NOT NULL,
  `Direccion_Cli` VARCHAR(45) NOT NULL,
  `Tel_Cli` DOUBLE NOT NULL,
  PRIMARY KEY (`Nit_Cli`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `diagrama_bd_chaquetas`.`Factura_Venta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `diagrama_bd_chaquetas`.`Factura_Venta` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `diagrama_bd_chaquetas`.`Factura_Venta` (
  `No_Fv` INT NOT NULL,
  `Fecha_Hora_Fv` DATETIME NOT NULL,
  `Forma_Pago_Fv` VARCHAR(45) NOT NULL,
  `Total_Pagar_Fv` DOUBLE NOT NULL,
  `Cliente_Nit_Cli` DOUBLE NOT NULL,
  PRIMARY KEY (`No_Fv`, `Cliente_Nit_Cli`),
  CONSTRAINT `fk_Factura_Venta_Cliente1`
    FOREIGN KEY (`Cliente_Nit_Cli`)
    REFERENCES `diagrama_bd_chaquetas`.`Cliente` (`Nit_Cli`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Factura_Venta_Cliente1_idx` ON `diagrama_bd_chaquetas`.`Factura_Venta` (`Cliente_Nit_Cli` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `diagrama_bd_chaquetas`.`Empleado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `diagrama_bd_chaquetas`.`Empleado` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `diagrama_bd_chaquetas`.`Empleado` (
  `Id_Em` INT NOT NULL,
  `Nombre_Em` VARCHAR(25) NOT NULL,
  `Apellido_Em` VARCHAR(25) NOT NULL,
  `Fecha_Naci_Em` DATE NOT NULL,
  `Genero_Em` CHAR(1) NOT NULL,
  `Direccion_Em` VARCHAR(45) NOT NULL,
  `Tel_Em` DOUBLE NOT NULL,
  `Email_Em` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Id_Em`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `diagrama_bd_chaquetas`.`Producto_Terminado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `diagrama_bd_chaquetas`.`Producto_Terminado` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `diagrama_bd_chaquetas`.`Producto_Terminado` (
  `Codigo_Pt` INT NOT NULL,
  `Descripcion_Pt` VARCHAR(50) NOT NULL,
  `Cantidad_Existente_Pt` INT NOT NULL,
  `Precio_Venta_Pt` DOUBLE NOT NULL,
  `Empleado_Id_Em` INT NOT NULL,
  PRIMARY KEY (`Codigo_Pt`, `Empleado_Id_Em`),
  CONSTRAINT `fk_Producto_Terminado_Empleado1`
    FOREIGN KEY (`Empleado_Id_Em`)
    REFERENCES `diagrama_bd_chaquetas`.`Empleado` (`Id_Em`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Producto_Terminado_Empleado1_idx` ON `diagrama_bd_chaquetas`.`Producto_Terminado` (`Empleado_Id_Em` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `diagrama_bd_chaquetas`.`Detalle_Venta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `diagrama_bd_chaquetas`.`Detalle_Venta` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `diagrama_bd_chaquetas`.`Detalle_Venta` (
  `Total_Parcial_Dv` DOUBLE NOT NULL,
  `Cantidad_Dv` INT NOT NULL,
  `Factura_Venta_No_Fv` INT NOT NULL,
  `Factura_Venta_Cliente_Nit_Cli` DOUBLE NOT NULL,
  `Producto_Terminado_Codigo_Pt` INT NOT NULL,
  PRIMARY KEY (`Factura_Venta_No_Fv`, `Factura_Venta_Cliente_Nit_Cli`, `Producto_Terminado_Codigo_Pt`),
  CONSTRAINT `fk_Detalle_Venta_Factura_Venta1`
    FOREIGN KEY (`Factura_Venta_No_Fv` , `Factura_Venta_Cliente_Nit_Cli`)
    REFERENCES `diagrama_bd_chaquetas`.`Factura_Venta` (`No_Fv` , `Cliente_Nit_Cli`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Detalle_Venta_Producto_Terminado1`
    FOREIGN KEY (`Producto_Terminado_Codigo_Pt`)
    REFERENCES `diagrama_bd_chaquetas`.`Producto_Terminado` (`Codigo_Pt`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Detalle_Venta_Producto_Terminado1_idx` ON `diagrama_bd_chaquetas`.`Detalle_Venta` (`Producto_Terminado_Codigo_Pt` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `diagrama_bd_chaquetas`.`Comprobante_Nomina`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `diagrama_bd_chaquetas`.`Comprobante_Nomina` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `diagrama_bd_chaquetas`.`Comprobante_Nomina` (
  `No_Pago_Cn` INT NOT NULL,
  `Fecha_Hora_Cn` DATETIME NOT NULL,
  `Rete_Salud_Cn` DOUBLE NOT NULL,
  `Rete_Pension_Cn` DOUBLE NOT NULL,
  `Total_Pagar_Cn` DOUBLE NOT NULL,
  `Empleado_Id_Em` INT NOT NULL,
  PRIMARY KEY (`No_Pago_Cn`, `Empleado_Id_Em`),
  CONSTRAINT `fk_Comprobante_Nomina_Empleado1`
    FOREIGN KEY (`Empleado_Id_Em`)
    REFERENCES `diagrama_bd_chaquetas`.`Empleado` (`Id_Em`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Comprobante_Nomina_Empleado1_idx` ON `diagrama_bd_chaquetas`.`Comprobante_Nomina` (`Empleado_Id_Em` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `diagrama_bd_chaquetas`.`Contrato_Laboral`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `diagrama_bd_chaquetas`.`Contrato_Laboral` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `diagrama_bd_chaquetas`.`Contrato_Laboral` (
  `No_Contrato_Cl` INT NOT NULL,
  `Fecha_Hora_Cl` DATETIME NOT NULL,
  `Tipo_Contrato_Cl` VARCHAR(45) NOT NULL,
  `Monto_Salario_Cl` DOUBLE NOT NULL,
  `Fecha_Inicio_Cl` DATE NOT NULL,
  `Fecha_Fin_Cl` DATE NOT NULL,
  `Estado_Cl` CHAR(1) NOT NULL,
  `Empleado_Id_Em` INT NOT NULL,
  PRIMARY KEY (`No_Contrato_Cl`, `Empleado_Id_Em`),
  CONSTRAINT `fk_Contrato_Laboral_Empleado1`
    FOREIGN KEY (`Empleado_Id_Em`)
    REFERENCES `diagrama_bd_chaquetas`.`Empleado` (`Id_Em`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Contrato_Laboral_Empleado1_idx` ON `diagrama_bd_chaquetas`.`Contrato_Laboral` (`Empleado_Id_Em` ASC);

-- SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- CONSULTAS INSERCION, PROYECCCION, RESTRICCION, ACTUALIZACION Y BORRADO
/*SELECT * FROM Materia_Prima;
SELECT * FROM Detalle_Compra;
SELECT * FROM Factura_Compra;
SELECT * FROM Proveedor;

SELECT * FROM Cliente;
SELECT * FROM Factura_Venta;
SELECT * FROM Detalle_Venta;
SELECT * FROM Producto_Terminado;
SELECT * FROM Empleado;
SELECT * FROM Comprobante_Nomina;
SELECT * FROM Contrato_Laboral;
*/
SET FOREIGN_KEY_CHECKS=0;
-- -----------------------
-- CONSULTAS DE INSERCIÓN
-- -----------------------
INSERT INTO Proveedor(Nit_Pro, Razon_Social_Pro, Direccion_Pro, Tel_Pro, Email_Pro) VALUES (500, 'Lanas Colombia SA', 'Cra 50 No 14-40', 7953264, 'lanascolombiasa@gmail.com');
INSERT INTO Proveedor(Nit_Pro, Razon_Social_Pro, Direccion_Pro, Tel_Pro, Email_Pro) VALUES (520, 'Sinteitico Colombia SA', 'Cra 75 No 05-30 sur', 7126525, 'sinteiticocolombiasa@gmail.com');
INSERT INTO Proveedor(Nit_Pro, Razon_Social_Pro, Direccion_Pro, Tel_Pro, Email_Pro) VALUES (540, 'Cuero Colombia SA', 'Cra 91 No 15-42', 7961304, 'cuerocolombiasa@hotmail.com');
INSERT INTO Proveedor(Nit_Pro, Razon_Social_Pro, Direccion_Pro, Tel_Pro, Email_Pro) VALUES (560, 'Cuerina Colombia SA', 'Cra 72 No 61-43 sur', 7133231, 'cuerinacolombiasa@hotmail.com');
INSERT INTO Proveedor(Nit_Pro, Razon_Social_Pro, Direccion_Pro, Tel_Pro, Email_Pro) VALUES (580, 'Tela Colombia SA', 'Cra 63 No 91-02 Sur', 7112124, 'telacolombiasa@gmail.com');
INSERT INTO Proveedor(Nit_Pro, Razon_Social_Pro, Direccion_Pro, Tel_Pro, Email_Pro) VALUES(600,'Impermeables Colombia SA','Cra 5 No 70-55 sur',7423232,'impermeablescolombiasa@hotmail.com');
SELECT * FROM Proveedor;

INSERT INTO Cliente (Nit_Cli, Razon_Social_Cli, Direccion_Cli, Tel_Cli) VALUES (10121514, 'jonathans confeccion', 'Cra 50 No 15-40', 3205419865);
INSERT INTO Cliente (Nit_Cli, Razon_Social_Cli, Direccion_Cli, Tel_Cli) VALUES (10236548, 'jonathans confeccion', 'Cra 75 No 05-30', 3136412054);
INSERT INTO Cliente (Nit_Cli, Razon_Social_Cli, Direccion_Cli, Tel_Cli) VALUES (11014898, 'jonathans confeccion', 'Cra 91 No 15-42', 3149650102);
INSERT INTO Cliente (Nit_Cli, Razon_Social_Cli, Direccion_Cli, Tel_Cli) VALUES (10054136, 'jonathans confeccion', 'Cra 72 No 61-43', 3156453510);
INSERT INTO Cliente (Nit_Cli, Razon_Social_Cli, Direccion_Cli, Tel_Cli) VALUES (12325449, 'jonathans confeccion', 'Cra 63 No 91-02', 3127414219);
SELECT * FROM Cliente;

INSERT INTO Materia_Prima (Cod_Mp, Descrip_Mp, Cant_Exist_Mp) VALUES (1000, 'Lana', 5);
INSERT INTO Materia_Prima (Cod_Mp, Descrip_Mp, Cant_Exist_Mp) VALUES (1050, 'Sintetico', 6);
INSERT INTO Materia_Prima (Cod_Mp, Descrip_Mp, Cant_Exist_Mp) VALUES (1100, 'Cuero', 3);
INSERT INTO Materia_Prima (Cod_Mp, Descrip_Mp, Cant_Exist_Mp) VALUES (1150, 'Cuerina', 4);
INSERT INTO Materia_Prima (Cod_Mp, Descrip_Mp, Cant_Exist_Mp) VALUES (1200, 'Tela', 2);
INSERT INTO Materia_Prima (Cod_Mp, Descrip_Mp, Cant_Exist_Mp) VALUES (1320, 'Impermeable', 6);
SELECT * FROM Materia_Prima;

INSERT INTO Empleado (Id_Em, Nombre_Em, Apellido_Em, Fecha_Naci_Em, Genero_Em, Direccion_Em, Tel_Em, Email_Em) VALUES (111, 'Daniel', 'Gutierrez','1990-08-12','M','Cra 40 No 20-01',3204516582, 'danielgutierres@gmail.com');
INSERT INTO Empleado (Id_Em, Nombre_Em, Apellido_Em, Fecha_Naci_Em, Genero_Em, Direccion_Em, Tel_Em, Email_Em) VALUES (153, 'Carlos', 'Ramirez','1995-10-02','M','Cra 80 No 50-02 sur',3104782154,'carlosramirez@gmail.com');
INSERT INTO Empleado (Id_Em, Nombre_Em, Apellido_Em, Fecha_Naci_Em, Genero_Em, Direccion_Em, Tel_Em, Email_Em) VALUES (172, 'Alejandro', 'Cuerdo','1980-12-24','M', 'Cra 25 No 61-09 sur',3058951240,'alejandrocuerdo@hotmail.com');
INSERT INTO Empleado (Id_Em, Nombre_Em, Apellido_Em, Fecha_Naci_Em, Genero_Em, Direccion_Em, Tel_Em, Email_Em) VALUES (182, 'Maria', 'Sanchez','1978-05-28','F','Cra 72 No 61-15',3186400201,'mariosanchez@hotmail.com');
INSERT INTO Empleado (Id_Em, Nombre_Em, Apellido_Em, Fecha_Naci_Em, Genero_Em, Direccion_Em, Tel_Em, Email_Em) VALUES (195, 'Angela', 'Perez','1999-11-01','F','Cra 81 No 58-05 sur',3209761240,'angelaperez@gmail.com');
SELECT * FROM Empleado;

--
-- TABLAS DEBILES Y RELACIONALES
--

INSERT INTO Detalle_Compra(Total_Parcial_Dc, Cantidad_Dc, Materia_Prima_Cod_Mp, Factura_Compra_No_Fc) VALUES (500000,10,1000,1125);
INSERT INTO Detalle_Compra(Total_Parcial_Dc, Cantidad_Dc, Materia_Prima_Cod_Mp, Factura_Compra_No_Fc) VALUES (600000,20,1050,1126);
INSERT INTO Detalle_Compra(Total_Parcial_Dc, Cantidad_Dc, Materia_Prima_Cod_Mp, Factura_Compra_No_Fc) VALUES (1000000,20,1150,1127);
INSERT INTO Detalle_Compra(Total_Parcial_Dc, Cantidad_Dc, Materia_Prima_Cod_Mp, Factura_Compra_No_Fc) VALUES (700000,30,1200,1128);
INSERT INTO Detalle_Compra(Total_Parcial_Dc, Cantidad_Dc, Materia_Prima_Cod_Mp, Factura_Compra_No_Fc) VALUES (450000,10,1320,1129);
SELECT * FROM Detalle_Compra;

INSERT INTO Factura_Compra(No_Fc, Fecha_Hora_Fc, Forma_Pago_Fc, Total_Pagar_Fc, Proveedor_Nit_Pro) VALUES (1125,'2023-03-25 08:10:00','Efectivo',500000,500);
INSERT INTO Factura_Compra(No_Fc, Fecha_Hora_Fc, Forma_Pago_Fc, Total_Pagar_Fc, Proveedor_Nit_Pro) VALUES (1126,'2023-03-25 09:10:00','Efectivo',700000,520);
INSERT INTO Factura_Compra(No_Fc, Fecha_Hora_Fc, Forma_Pago_Fc, Total_Pagar_Fc, Proveedor_Nit_Pro) VALUES (1127,'2023-04-02 08:30:00','Tarjeta',1000000,540);
INSERT INTO Factura_Compra(No_Fc, Fecha_Hora_Fc, Forma_Pago_Fc, Total_Pagar_Fc, Proveedor_Nit_Pro) VALUES (1128,'2023-04-02 10:05:00','Efectivo',760000,560);
INSERT INTO Factura_Compra(No_Fc, Fecha_Hora_Fc, Forma_Pago_Fc, Total_Pagar_Fc, Proveedor_Nit_Pro) VALUES (1129,'2023-04-03 08:50:00','Tarjeta',400000,580);
SELECT * FROM Factura_Compra;

-- ---

INSERT INTO Factura_Venta(No_Fv, Fecha_Hora_Fv, Forma_Pago_Fv, Total_Pagar_Fv, Cliente_Nit_Cli) VALUES (100,'2023-04-05 09:10:00', 'Efectivo', 1000000, 10121514);
INSERT INTO Factura_Venta(No_Fv, Fecha_Hora_Fv, Forma_Pago_Fv, Total_Pagar_Fv, Cliente_Nit_Cli) VALUES (101,'2023-04-20 12:05:00', 'Tarjeta', 950000, 10236548);
INSERT INTO Factura_Venta(No_Fv, Fecha_Hora_Fv, Forma_Pago_Fv, Total_Pagar_Fv, Cliente_Nit_Cli) VALUES (102,'2023-04-27 15:00:00', 'Tarjeta', 1200000, 11014898);
INSERT INTO Factura_Venta(No_Fv, Fecha_Hora_Fv, Forma_Pago_Fv, Total_Pagar_Fv, Cliente_Nit_Cli) VALUES (103,'2023-05-05 11:55:00', 'Efectivo', 1500000, 10054136);
INSERT INTO Factura_Venta(No_Fv, Fecha_Hora_Fv, Forma_Pago_Fv, Total_Pagar_Fv, Cliente_Nit_Cli) VALUES (104,'2023-05-10 12:30:00', 'Efectivo', 2000000, 12325449);
INSERT INTO Factura_Venta(No_Fv, Fecha_Hora_Fv, Forma_Pago_Fv, Total_Pagar_Fv, Cliente_Nit_Cli) VALUES (105,'2023-05-10 11:30:00', 'Efectivo', 2000000, 10121514);
SELECT * FROM Factura_Venta;

INSERT INTO Detalle_Venta(Total_Parcial_Dv, Cantidad_Dv, Factura_Venta_No_Fv, Factura_Venta_Cliente_Nit_Cli, Producto_Terminado_Codigo_Pt) VALUES (1000000, 10 ,100, 10121514, 1);
INSERT INTO Detalle_Venta(Total_Parcial_Dv, Cantidad_Dv, Factura_Venta_No_Fv, Factura_Venta_Cliente_Nit_Cli, Producto_Terminado_Codigo_Pt) VALUES (950000, 15 ,101, 10236548, 2);
INSERT INTO Detalle_Venta(Total_Parcial_Dv, Cantidad_Dv, Factura_Venta_No_Fv, Factura_Venta_Cliente_Nit_Cli, Producto_Terminado_Codigo_Pt) VALUES (1000000, 20 ,102, 11014898, 3);
INSERT INTO Detalle_Venta(Total_Parcial_Dv, Cantidad_Dv, Factura_Venta_No_Fv, Factura_Venta_Cliente_Nit_Cli, Producto_Terminado_Codigo_Pt) VALUES (1500000, 30 ,103, 10054136, 4);
INSERT INTO Detalle_Venta(Total_Parcial_Dv, Cantidad_Dv, Factura_Venta_No_Fv, Factura_Venta_Cliente_Nit_Cli, Producto_Terminado_Codigo_Pt) VALUES (1800000, 40 ,104, 12325449, 5);
INSERT INTO Detalle_Venta(Total_Parcial_Dv, Cantidad_Dv, Factura_Venta_No_Fv, Factura_Venta_Cliente_Nit_Cli, Producto_Terminado_Codigo_Pt) VALUES (1900000, 20 ,105, 12325449, 6);
SELECT * FROM Detalle_Venta;

INSERT INTO Producto_Terminado(Codigo_Pt, Descripcion_Pt, Cantidad_Existente_Pt, Precio_Venta_Pt, Empleado_Id_Em) VALUES (1,'Chaqueta de cuero',10, 1000000,111);
INSERT INTO Producto_Terminado(Codigo_Pt, Descripcion_Pt, Cantidad_Existente_Pt, Precio_Venta_Pt, Empleado_Id_Em) VALUES (2,'Chaqueta de cuerina',15, 950000,153);
INSERT INTO Producto_Terminado(Codigo_Pt, Descripcion_Pt, Cantidad_Existente_Pt, Precio_Venta_Pt, Empleado_Id_Em) VALUES (3,'Chaqueta de tela',20, 1200000,172);
INSERT INTO Producto_Terminado(Codigo_Pt, Descripcion_Pt, Cantidad_Existente_Pt, Precio_Venta_Pt, Empleado_Id_Em) VALUES (4,'Chaqueta de lana',30, 1500000,182);
INSERT INTO Producto_Terminado(Codigo_Pt, Descripcion_Pt, Cantidad_Existente_Pt, Precio_Venta_Pt, Empleado_Id_Em) VALUES (5,'Chaqueta de sintetica',40, 2000000,195);
INSERT INTO Producto_Terminado(Codigo_Pt, Descripcion_Pt, Cantidad_Existente_Pt, Precio_Venta_Pt, Empleado_Id_Em) VALUES (6,'Chaqueta impermeable',20, 100000,111);
SELECT * FROM Producto_Terminado;

INSERT INTO Comprobante_Nomina(No_Pago_Cn, Fecha_Hora_Cn, Rete_Salud_Cn, Rete_Pension_Cn, Total_Pagar_Cn, Empleado_Id_Em) VALUES (1215, '2023-05-02 11:52:00', 44000,44000, 1072000, 111);
INSERT INTO Comprobante_Nomina(No_Pago_Cn, Fecha_Hora_Cn, Rete_Salud_Cn, Rete_Pension_Cn, Total_Pagar_Cn, Empleado_Id_Em) VALUES (1801, '2023-05-02 10:35:00', 44000,44000, 1072000, 153);
INSERT INTO Comprobante_Nomina(No_Pago_Cn, Fecha_Hora_Cn, Rete_Salud_Cn, Rete_Pension_Cn, Total_Pagar_Cn, Empleado_Id_Em) VALUES (1802, '2023-05-03 09:15:00', 44000,44000, 1072000, 172);
INSERT INTO Comprobante_Nomina(No_Pago_Cn, Fecha_Hora_Cn, Rete_Salud_Cn, Rete_Pension_Cn, Total_Pagar_Cn, Empleado_Id_Em) VALUES (1803, '2023-05-04 11:30:00', 44000,44000, 1072000, 182);
INSERT INTO Comprobante_Nomina(No_Pago_Cn, Fecha_Hora_Cn, Rete_Salud_Cn, Rete_Pension_Cn, Total_Pagar_Cn, Empleado_Id_Em) VALUES (1804, '2023-05-05 13:05:00', 44000,44000, 1072000, 195);
SELECT * FROM Comprobante_Nomina;

-- minimo: 1'160.000.00
INSERT INTO Contrato_Laboral(No_Contrato_Cl, Fecha_Hora_Cl, Tipo_Contrato_Cl, Monto_Salario_Cl, Fecha_Inicio_Cl, Fecha_Fin_Cl, Estado_Cl,
Empleado_Id_Em) VALUES (1013111,'2020-10-05 12:01:00','Termino fijo',1072000,'2023-02-19','2023-08-19','Y',111);
INSERT INTO Contrato_Laboral(No_Contrato_Cl, Fecha_Hora_Cl, Tipo_Contrato_Cl, Monto_Salario_Cl, Fecha_Inicio_Cl, Fecha_Fin_Cl, Estado_Cl,
Empleado_Id_Em) VALUES (1013112,'2021-05-21 12:30:00','Termino fijo',1072000,'2023-02-20','2023-08-20','Y',153);
INSERT INTO Contrato_Laboral(No_Contrato_Cl, Fecha_Hora_Cl, Tipo_Contrato_Cl, Monto_Salario_Cl, Fecha_Inicio_Cl, Fecha_Fin_Cl, Estado_Cl,
Empleado_Id_Em) VALUES (1013113,'2018-03-07 13:05:00','Termino fijo',1072000,'2023-04-05','2023-10-05','Y',172);
INSERT INTO Contrato_Laboral(No_Contrato_Cl, Fecha_Hora_Cl, Tipo_Contrato_Cl, Monto_Salario_Cl, Fecha_Inicio_Cl, Fecha_Fin_Cl, Estado_Cl,
Empleado_Id_Em) VALUES (1013114,'2022-09-11 16:51:00','Termino fijo',1072000,'2023-04-03','2023-10-03','Y',182);
INSERT INTO Contrato_Laboral(No_Contrato_Cl, Fecha_Hora_Cl, Tipo_Contrato_Cl, Monto_Salario_Cl, Fecha_Inicio_Cl, Fecha_Fin_Cl, Estado_Cl,
Empleado_Id_Em) VALUES (1013115,'2019-12-12 14:22:00','Termino fijo',1072000,'2023-04-22','2023-10-22','Y',195);
SELECT * FROM Contrato_Laboral;
-- --------------------------------------------------
-- -------------------------
/*

-- -------------------------
-- CONSULTAS DE PROYECCIÓN
-- -------------------------

-- Mostrar Inventario actual
SELECT Id_Em, Nombre_Em, Tel_Em FROM Empleado;
-- Que clientes han comprado en nuestro taller
SELECT No_Fv, Cliente_Nit_Cli, Fecha_Hora_Fv, Total_Pagar_Fv FROM Factura_Venta;
-- Mostrar los datos de un empleado
SELECT Nombre_Em, Apellido_Em, Tel_Em FROM Empleado;
-- Mostrar los datos de las facturas
SELECT Fecha_Hora_Fv, Total_Pagar_Fv FROM Factura_Venta;
-- Mostrar los proveedores que tenemos
SELECT Razon_Social_Pro, Direccion_Pro, Tel_Pro FROM Proveedor;
-- --------------------------------------------------
-- -------------------------
-- CONSULTAS DE RESTRICCIÓN
-- -------------------------
-- Que materias primas estan por acabarse (menos de 4 existencias)
SELECT * FROM Materia_Prima WHERE Cant_Exist_Mp < 4;
-- Cuantas unidades de chaquetas se vendieron en un dia en especifico?
SELECT * FROM Factura_Venta WHERE Fecha_Hora_Fv = '2023-05-10 11:30:00';
-- Cuantos trabajadores tienen contrato activo actual?
SELECT * FROM Contrato_Laboral WHERE Estado_Cl = 'Y';
-- Cuantas ventas han sido en efectivo?
SELECT * FROM Factura_Venta WHERE Forma_Pago_Fv = 'Efectivo';
-- Cuantas ventas han sido en Tarjeta?
SELECT * FROM Factura_Venta WHERE Forma_Pago_Fv = 'Tarjeta';
-- Cuantas facturas de materias primas se han comprado en Efectivo?
SELECT * FROM Factura_Compra WHERE Forma_Pago_Fc = 'Efectivo';
-- Cuantos Productos existentes estan entre 10 y 20
SELECT Descripcion_Pt, Cantidad_Existente_Pt FROM 
Producto_Terminado WHERE Cantidad_Existente_Pt BETWEEN 20 AND 30;
-- Cuantas chaquetas compro este cliente?
SELECT No_Fv, Cliente_Nit_Cli, Total_Pagar_Fv 
FROM Factura_Venta WHERE Cliente_Nit_Cli = 10121514;

-- ----------------------------------------
-- CONSULTAS DE RESTRICCIÓN CON FUNCIONES
-- --------------------------------------------------
-- Cuantos empleados tienen contrato laboral activo
SELECT Estado_Cl, COUNT(*) FROM Contrato_Laboral WHERE Estado_Cl = 'Y';
-- Fecha en la que termina el contrato de todos los empleados
SELECT DISTINCT CONTRATO_LABORAL.Empleado_Id_Em,Fecha_Fin_Cl FROM CONTRATO_LABORAL;
-- Sumar la cantidad de productos vendidos en todas las ventas que superen el total de 1'
SELECT SUM(Cantidad_Dv) FROM DETALLE_VENTA WHERE Total_Parcial_Dv >= 1000000;
-- Saber cuantas compras de materia prima salen mas caras de lo normal
SELECT * FROM FACTURA_COMPRA WHERE Total_Pagar_Fc > (SELECT AVG(Total_Pagar_Fc) FROM FACTURA_COMPRA);
--  Saber el precio completo de la nómina mensual
SELECT SUM(Monto_Salario_Cl) FROM CONTRATO_LABORAL WHERE Estado_Cl = 'Y';
-- --------------------------------------------------
-- -----------------------------
-- CONSULTAS DE ORDENAMIENTO
-- -----------------------------
-- Ordena los empleados por oredn alfabetico en los apellidos
SELECT Id_Em, Nombre_Em, Apellido_Em FROM Empleado ORDER BY Apellido_Em;
-- Ordena los empleados por oredn alfabetico en los Nombres
SELECT Id_Em, Nombre_Em, Apellido_Em FROM Empleado ORDER BY Nombre_Em;
-- Ordena la cantidad de materias primas de menor a mayor
SELECT Descrip_Mp, Cant_Exist_Mp FROM Materia_Prima ORDER BY Cant_Exist_Mp;
-- Ordena la cantidad de productos terminados de menor a mayor
SELECT Codigo_Pt, Descripcion_Pt, Cantidad_Existente_Pt FROM Producto_Terminado ORDER BY Cantidad_Existente_Pt;
-- Ordena las facturas de ventas por fecha mas reciente 
SELECT No_Fv, Cliente_Nit_Cli, Total_Pagar_Fv, Fecha_Hora_Fv FROM Factura_Venta ORDER BY Fecha_Hora_Fv DESC;
SELECT * FROM Empleado;
-- --------------------------------------------------

-- -----------------------------
-- CONSULTAS DE ACTUALIZACIÓN
-- -----------------------------
-- Actualizar una Materia Prima en su cantidad.
UPDATE Materia_Prima SET Cant_Exist_Mp = 9 WHERE Cod_Mp = 1100;
SELECT * FROM Materia_Prima;
-- Actualizar un Producto Terminado en su cantidad.
UPDATE Producto_Terminado SET Cantidad_Existente_Pt = 40 WHERE Codigo_Pt = 2;
SELECT * FROM Producto_Terminado;
-- Actualizar el numero de telefono de un Cliente en Especifico
UPDATE Cliente SET Tel_Cli = 3204777906 WHERE Nit_Cli = 11014898;
SELECT * FROM Cliente;
-- Actualizar el correo electronico de un Empleado en Especifico
UPDATE Empleado SET Email_Em = 'mariasanchez1978@gmail.com' WHERE Id_Em = 182;
SELECT * FROM Empleado;

-- Actualizar el pago de un empleado tanto en nomina como contrato
UPDATE Comprobante_Nomina SET Total_Pagar_Cn = 1500000 Where Empleado_Id_Em = 182;
UPDATE Contrato_Laboral SET Monto_Salario_Cl = 1500000 Where Empleado_Id_Em = 182;
SELECT * FROM Comprobante_Nomina;
SELECT * FROM Contrato_Laboral;

-- --------------------------------------------------
-- ---------------------------
-- CONSULTAS DE BORRADO
-- ---------------------------
-- Eliminar en su totalidad los registros de un producto terminado (existencias agotadas)
DELETE FROM Producto_Terminado WHERE Codigo_Pt = 3;
SELECT * FROM Producto_Terminado;
-- Eliminar en su totalidad los registros de materia prima (existencias agotadas)
DELETE FROM Materia_Prima WHERE Cod_Mp = 1200;
SELECT * FROM Materia_Prima;

-- Eliminar un empleado en su totalidad de toda la base de datos (Despedido)
DELETE FROM Comprobante_Nomina WHERE Empleado_Id_EM = 172;
DELETE FROM Contrato_Laboral WHERE Empleado_Id_EM = 172;
DELETE FROM Empleado WHERE Id_Em = 172;
SELECT * FROM Comprobante_Nomina;
SELECT * FROM Contrato_Laboral;
SELECT * FROM Empleado;

-- Eliminacion de los datos de un registro de factura de compra (Factura erronea)
DELETE FROM Factura_Compra WHERE No_Fc = 1127;
SELECT * FROM Factura_Compra;
-- Eliminacion de los datos de un registro de venta de compra (Factura erronea)
DELETE FROM Factura_Venta WHERE No_Fv = 104;
SELECT * FROM Factura_Venta;
*/